#include<bits/stdc++.h>
#include<algorithm>
using namespace std;

string longestRepeatedSubSeq(string str1)
{
	int n=str1.length();
	string str2=str1;
	int dp[n+1][n+1];
	for(int i=0;i<=n;i++)
	{
		for(int j=0;j<=n;j++)
		{
			if(i==0 || j==0)
			{
				dp[i][j]=0;
			}
			else if(str1[i-1]==str2[j-1] && i!=j)
			{
				dp[i][j]=1+dp[i-1][j-1];
			}
			else
			{
				dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
			}
		}
	}
	
	string str;
	int i=n,j=n;
	while(i>0 && j>0)
	{
		if(dp[i][j]==dp[i-1][j-1]+1)
		{
			str.push_back(str1[i-1]);
			i--;
			j--;
		}
		else if(dp[i][j]==dp[i-1][j])
		{
			i--;
		}
		else
		{
			j--;
		}
	}
	reverse(str.begin(),str.end());
	return str;
}
int main()
{
	
	string str = "AABEBCDD"; 
    cout << longestRepeatedSubSeq(str); 
	
	return 0;
}
