https://ide.geeksforgeeks.org/EnRoiBLz2w
#include<bits/stdc++.h>
using namespace std;
int countSubsetSum(int arr[],int n,int sum)
{
	int i,j;
	int dp[n+1][sum+1];
	for(i=0;i<=n;i++)
	{
		for(j=0;j<=sum;j++)
		{
			if(i==0)
			{
				dp[0][j]=0;
			}
			if(j==0)
			{
				dp[i][0]=1;
			}
		}
	}
	// Counting the table
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=sum;j++)
		{
			if(arr[i-1]<=j)
			{
				dp[i][j]=dp[i-1][j-arr[i-1]]+dp[i-1][j];
			}
			else
			{
				dp[i][j]=dp[i-1][j];
			}
		}
	}
	
	return dp[n][sum];
}
int minSubDiff(int arr[],int n,int range,int diff)
{
	bool dp[n+1][range+1];
	// Filling out the values
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<range;j++)
		{
			if(i==0)
			{
				dp[0][j]=false;
			}
			if(j==0)
			{
				dp[i][0]=true;
			}
		}
	}
	// Now putting true or false and checking whether value exists or not
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=range;j++)
		{
			if(arr[i-1]<=j)
			{
				dp[i][j]=dp[i-1][j-arr[i-1]] || dp[i-1][j];
			}
			else
			{
				dp[i][j]=dp[i-1][j];
			}
		}
		}
	// Checking the sum;
	int sum=(diff+range)/2;
	
	
	return countSubsetSum(arr,n,sum);
}
int main()
{
  int arr[]={1,1,2,3};
  int n=sizeof(arr)/sizeof(arr[0]);
  int range=0;
  for(int i=0;i<n;i++)
  {
    range=range+arr[i];
  }

  cout<< minSubDiff(arr,n,range,1);
	
	
	return 0;
}
