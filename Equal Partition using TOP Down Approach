#include <iostream>
#include<math.h>
using namespace std;

bool findPartition(int arr[],int n)
{
  
  int sum=0;
  // Calculating sum
  for(int i=0;i<n;i++)
  {
    sum=sum+arr[i];
  }
 // Checking the value
  if(sum % 2 !=0)
  {
    return false;
  }
  sum=sum/2;

  // same as subset Probelem
  bool dp[n+1][sum+1];
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<sum;j++)
    {
      // if array is empty
      if(i==0)
      {
        dp[0][j]= false;  
      }
      else if(j==0)
      {
        dp[i][0]= true;
      }
    }
  }

  for(int i=1;i<=n;i++)
  {
    for(int j=1;j<=sum;j++)
    {
      if(arr[i-1]<=j)
      {
        dp[i][j]=dp[i-1][j-arr[i-1]] || dp[i-1][j];
      }
      else
      {
        dp[i][j]=dp[i-1][j];
      }
    }
  }

  

return dp[n][sum];
}

int main()
{

  int arr[]={1,5,11,5};
  int sum=12;
  int n=sizeof(arr)/sizeof(arr[0]);

 if(findPartition(arr,n)==true)
 {
   cout<<"Can be divided";
 }
 else
 {
   cout<<"Cannot be divided";
 }
 
  return 0;
}
