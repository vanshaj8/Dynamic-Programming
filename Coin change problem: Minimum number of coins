#include <iostream>
#include<bits/stdc++.h> 
using namespace std;
// Max number of ways a coin can be used to have a given sum
int CoinChange(int coin[],int W,int n)
{
  int dp[n+1][W+1];
  // Initialising the first row

  for(int i=0;i<=n;i++)
  {
    for(int j=0;j<=W;j++)
    {
      if(i==0)
      {
        dp[0][j]=INT_MAX-1;
      }
      if(j==0)
      {
        dp[i][j]=0;
      }
      
       }
  }
  // Initialising the second row
  for(int j=1;j<=W;j++)
  {
    if(j%coin[0]==0)
    {
      dp[1][j]=j/coin[0];
    }
    else
    {
      dp[1][j]=INT_MAX-1;
    }
  }
  for(int i=2;i<=n;i++)
  {
    for(int j=1;j<=W;j++)
    {
      if(coin[i-1]<=j)
      {
        dp[i][j]=min(dp[i][j-coin[i-1]]+1,dp[i-1][j]);
      }
      else
      {
        dp[i][j]=dp[i-1][j];
      }
    }
  }
   
return dp[n][W];
}
int main()
{
  int wt[]={1,2,3}; 
  int W =5;
  int n=sizeof(wt)/sizeof(wt[0]);
  cout<<CoinChange(wt,W,n);





  return 0;}
